[[license-management]]
= License Management

[partintro]
--
When you initially install {xpack}, a 30 day license is generated that
allows access to x-pack features. By default, this will be a trial license that
allows access to all features -- the equivalent of a platinum license. If you prefer,
the cluster can be configured to generate a basic license at startup. If the basic license
is chosen, you will be able to activate a trial license at some point in the future using
an api. At the end of the 30 day period, you can https://www.elastic.co/subscriptions/[purchase a subscription]
to keep using the full functionality of the {xpack} components.

IMPORTANT:  When your license expires, {xpack} operates in a degraded mode. For
more information, see  <<license-expiration, License Expiration>>.
--

[[generated-license]]
== Generating a license

At node startup a license will be generated if one is not already registered for the
cluster. By default, this will be a 30 day trial license that gives access to all
x-pack features.

A config exists allowing you to generate a basic license instead of a trial license.
This setting exists for users that do not want to immediately use their trial license.

`xpack.license.self_generated.type`::
Set to `trial` (default) to enable all features. +
+
If set to `basic` in `elasticsearch.yml`, the self generated license will only
give access to the features of a standard basic license. If this config is used,
the cluster will still be upgradable to a trial license in the future.

You can also use the `start_trial` API to start a trial license. You are only allowed to
initiate a trial license if your cluster has not already activated a trial license for
the current major x-pack version. So if you have already activated a trial for v6.0, you
will not be able to start a new trial until v7.0.

Using the `start_trial` api:

. Check if you are eligible to start a trial:
+
--
[source,shell]
-----------------------------------------------------
curl -XGET -u elastic:elastic_password 'http://<host>:<port>/_xpack/license/trial_status'
--------------------------------------------
// NOTCONSOLE

--
. If you are eligible to start a trial:
+
[source,shell]
-----------------------------------------------------
curl -XGET -u elastic:elastic_password 'http://<host>:<port>/_xpack/license/start_trial'
--------------------------------------------
// NOTCONSOLE

When you use this api the trial license will replace your existing license. If you would
like to revert to your existing license when the trial is complete, you will need to
install your license again, or https://register.elastic.co/[register for a new basic license]
if you do not already have one.

[[installing-license]]
== Updating Your License

You can update your license at runtime without shutting down your nodes. License
updates take effect immediately. The license is provided as a _JSON_ file that
you install with the `license` API.

When security is enabled, you need cluster admin privileges to install the
license. The <<built-in-users, built-in `elastic` user>> has the required
privileges.

To update your license:

. Send a request to the `license` API and specify the file that contains your
new license:
+
--
[source,shell]
-----------------------------------------------------------------------
curl -XPUT -u elastic 'http://<host>:<port>/_xpack/license' -H "Content-Type: application/json" -d @license.json
-----------------------------------------------------------------------
// NOTCONSOLE

Or on windows machine:

[source,shell]
-----------------------------------------------------------------------
gc .\license.json |  Invoke-WebRequest -uri http://<host>:<port>/_xpack/license -Credential elastic -Method Put
-----------------------------------------------------------------------
// NOTCONSOLE

Where:

* `elastic` is the built-in super user. The default password is `changeme`. If
you haven't already, <<built-in-users, change the default password>>. Any user
with cluster admin privileges can  install the license.
* `<host>` is the hostname of the Elasticsearch node (`localhost` if executing
  locally)
* `<port>` is the http port (defaults to `9200`)
* `license.json` is the license JSON file
--

. If the license you are installing does not support all of the features
available with your previous license, you will be notified in the response. To
complete the license installation, you must resubmit the license update request
and set the `acknowledge` parameter to `true` to indicate that you are aware of
the changes.
+
[source,shell]
-----------------------------------------------------------------------
curl -XPUT -u elastic 'http://<host>:<port>/_xpack/license?acknowledge=true' -H "Content-Type: application/json" -d @license.json
-----------------------------------------------------------------------
// NOTCONSOLE

[[listing-licenses]]
== Viewing the Installed License

You can also use the `license` API to retrieve the currently installed license:

[source,shell]
-----------------------------------------------------
curl -XGET -u elastic:changeme 'http://<host>:<port>/_xpack/license'
{
  "license" : {
    "status" : "active",
    "uid" : "0a98411f-73f4-4c67-954c-724874ed5488",
    "type" : "trial",
    "issue_date" : "2015-10-13T18:18:20.709Z",
    "issue_date_in_millis" : 1444760300709,
    "expiry_date" : "2015-11-12T18:18:20.709Z",
    "expiry_date_in_millis" : 1447352300709,
    "max_nodes" : 1000,
    "issued_to" : "elasticsearch",
    "issuer" : "elasticsearch"
  }
}
--------------------------------------------
// NOTCONSOLE

NOTE: You need cluster admin privileges to retrieve the license.

[[license-expiration]]
== License Expiration

Your {xpack} license is time based and will expire at a future date. If you're
using {monitoring} and your license will expire within 30 days, a license
expiration warning is displayed prominently. Warnings are also displayed on
startup and written to the {es} log starting 30 days from the expiration date.
These error messages tell you when the license expires and what features will be
disabled if you fail to update the license.

[float]
=== Watcher
* PUT / GET watch APIs will be disabled, DELETE watch API will continue to work
* Watches will execute and write to the history
* The actions of the watches will not execute

[float]
=== Monitoring
* The agent will stop collecting cluster and indices metrics
* The agent will stop automatically cleaning indices older than `xpack.monitoring.history.duration`

[float]
=== Graph
* Graph explore APIs will be disabled

[float]
=== Reporting
* Reporting will no longer be available in {kib}
* Report generation urls will stop working
* Existing reports will no longer be accessible

[float]
=== Security
* Cluster health, cluster stats and indices stats operations will be blocked
* All data operations (read and write) will continue to work

Once the license expires, calls to the cluster health, cluster stats, and index
stats APIs fail with a `security_exception` and return a 403 HTTP status code.

[source,sh]
--------------------------------------------
{
  "error": {
    "root_cause": [
      {
        "type": "security_exception",
        "reason": "current license is non-compliant for [security]",
        "license.expired.feature": "security"
      }
    ],
    "type": "security_exception",
    "reason": "current license is non-compliant for [security]",
    "license.expired.feature": "security"
  },
  "status": 403
}
--------------------------------------------

This message enables automatic monitoring systems to easily detect the license
failure without immediately impacting other users.

[float]
=== Machine learning
* APIs to create jobs, open jobs, send data to jobs, create {dfeeds}, and start
{dfeeds} will be disabled
* All started {dfeeds} will be stopped. All open jobs will be closed
* Existing job results will continue to be available by using {kib} or APIs

[float]
=== Logstash Pipeline Management
* Will not be able to create new pipelines and edit or delete existing pipelines from the UI
* Will be able to list and view existing pipelines from the UI
* Will be able to run Logstash instances which are registered to listen to existing pipelines

IMPORTANT: You should update your license as soon as possible. You are
essentially flying blind when running with an expired license. Access to the
cluster health and stats APIs is critical for monitoring and managing an {es}
cluster.
